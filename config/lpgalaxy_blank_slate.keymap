#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define QWERTY_BASE 1

#define TBLE_ORTHO   1

#define RAI_L 1
#define LOW_L 2
#define FUN_L 3
#define NUM_L 4

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <200>; };

#define BT(n) BT_SEL n

/ / {
    chosen { zmk,matrix_transform = &ortho_transform; };

    macros {
        caltd: caltd {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LA(DEL))>;
            label = "CALTD";
        };

        caltd: caltd {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LA(DEL))>;
            label = "CALTD";
        };

        alt_tab: alt_tab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(TAB)>;
            label = "ALT_TAB";
        };

        alt_f4: alt_f4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(F4)>;
            label = "ALT_F4";
        };

        w_snp_l: w_snp_l {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(LEFT)>;
            label = "W_SNP_L";
        };

        w_snp_r: w_snp_r {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(RIGHT)>;
            label = "W_SNP_R";
        };

        w_snp_u: w_snp_u {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(UP_ARROW)>;
            label = "W_SNP_U";
        };

        w_snp_d: w_snp_d {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(DOWN_ARROW)>;
            label = "W_SNP_D";
        };

        w_lock: w_lock {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(L)>;
            label = "W_LOCK";
        };
    };

    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESC>;
            key-positions = <19 20>;
        };
    };
    
    tap_dances {
    	shifty: shift_caps_word {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_SHIFTY";
            #binding-cells = <0>;
            tapping-term-ms = <150>;
            bindings = <&kp LSHFT>, <&caps_word>;
	    };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            // --------------------------------------------------------------------------------------------------
            // |  ALT   |   Q   |   W   |   E   |   R   |   T   |   Y   |   U   |   I   |   O   |   P   |  \ |  |
            // |  SFT   |   A   |   S   |   D   |   F   |   G   |   H   |   J   |   K   |   L   |   ;   |  ' "  |
            // |  Ctrl  |   Z   |   X   |   C   |   V   |   B   |   N   |   M   |   , < |   . > |   / ? |  FUN  |
            // |        |       |       |  GUI  |  LOW  |  SPC  |  ENT  |  RAI  |  SFT  |       |       |       |
            
            label = "Base";
            bindings = <
 &kp LEFT_ALT       &kp Q       &kp W       &kp E           &kp R           &kp T          &kp Y            &kp U           &kp I       &kp O       &kp P           &kp BSLH
 &kp LEFT_SHIFT     &kp A       &kp S       &kp D           &kp F           &kp G          &kp H            &kp J           &kp K       &kp L       &kp SEMI        &kp SQT
 &kp LCTRL          &kp Z       &kp X       &kp C           &kp V           &kp B          &kp N            &kp M           &kp COMMA   &kp DOT     &kp FSLH        &mo 3
 &trans             &trans      &trans      &kp LEFT_GUI    &lt 1 TAB       &kp SPACE      &kp RET          &lt 2 BSPC      &kp RSHIFT  &trans      &trans          &trans
            >;
        };

        raise_layer {
            // --------------------------------------------------------------------------------------------------
            // |  ~ `   |   F1  |   F2  |   F3  |   F4  |   F5  |   F6  |   F7  |   F8  |   F9  |  F10  |  F12  |
            // |        |   1   |   2   |   3   |   4   |   5   |   6   |   7   |   8   |   9   |  10   |       |
            // |        |   Z   |       |   = + |   [   |   {   |   }   |   ]   |   - _ |       |       |       |
            // |        |       |       |  GUI  |  LOW  |  SPC  |  ENT  |  RAI  |  SFT  |       |       |       |

            bindings = <
&kp GRAVE       &kp F1       &kp F2      &kp F3      &kp F4      &kp F5      &kp F6    &kp F7       &kp F8      &kp F9      &kp F10     &kp F12
&trans          &kp N1       &kp N2      &kp N3      &kp N4      &kp N5      &kp N6    &kp N7       &kp N8      &kp N9      &kp N0      &trans
&trans          &trans       &trans      &kp EQUAL   &kp LBKT    &kp LBRC    &kp RBRC  &kp RBKT     &kp MINUS   &trans      &trans      &trans
&trans          &trans       &trans      &kp LGUI    &lt 1 TAB   &kp SPACE   &kp RET   &lt 2 BSPC   &kp RSHIFT  &trans      &trans      &trans
            >;

            label = "Raise";
        };

        lower_layer {
            // --------------------------------------------------------------------------------------------------
            // |        |  DEL  | HOME  | PGUP  |       |       |       |       |   UP  |       |       |       |
            // |        |  INS  |  END  | PGDN  |       |       | MUTE  | LEFT  | DOWN  | RIGHT |       |       |
            // |        |       |       |       |       |       | MPLY  | MPRV  | MNXT  |  VOLD |  VOLU |  FUN  |
            // |        |       |       |  GUI  |  LOW  |  SPC  |  ENT  |  RAI  |  SFT  |       |       |       |

            bindings = <
&trans  &kp DEL     &kp HOME  &kp PG_UP    &none   &none     &none     &none       &kp UP      &none         &none         &trans
&trans  &kp INS     &kp END   &kp PG_DN    &none   &none     &none     &kp LEFT    &kp DOWN    &kp RIGHT     &none         &trans
&trans  &none       &none     &none        &none   &none     &kp C_PP  &kp C_PREV  &kp C_NEXT  &kp C_VOL_DN  &kp C_VOL_UP  &trans
&none   &none       &none     &trans       &trans  &trans    &trans    &trans      &trans      &none         &none         &none
            >;

            label = "Lower";
        };

        func_layer {
            // --------------------------------------------------------------------------------------------------
            // |        |  OUT  |  POW  |  BTP  |  BTN  |  BTC  |       |       | WSNU  |       |       |       |
            // | caltd  |       |       |       |       |       |       | WSNL  | WSND  | WSNR  |       |       |
            // |  Ctrl  |       |  BT0  |  BT1  |  BT2  |  NUM  | WLCK  |  RST  | BOOT  |       |  CALC |  FUN  |
            // |        |       |       |  GUI  |  LOW  |  SPC  |  ENT  |  RAI  |  SFT  |       |       |       |

            bindings = <
&trans  &out OUT_TOG  &ext_power EP_TOG  &bt BT_PRV    &bt BT_NXT    &bt BT_CLR    &none    &none       &w_snp_u     &none     &trans      &trans
&caltd  &none         &none              &none         &none         &none         &none    &w_snp_l    &w_snp_d     &w_snp_r  &trans      &trans
&trans  &none         &bt BT_SEL 0       &bt BT_SEL 1  &bt BT_SEL 2  &kp KP_NUM    &w_lock  &sys_reset  &bootloader  &trans    &kp K_CALC  &trans
&none   &none         &none              &trans        &trans        &trans        &trans   &trans      &trans       &none     &none       &none
            >;

            label = "System";
        };

        num_layer {
            // --------------------------------------------------------------------------------------------------
            // |        |       |       |       |       |       |       |       |       |       |       |       |
            // |        |       |       |       |       |       |       |       |       |       |       |       |
            // |        |       |       |       |       |       |       |       |       |       |       |  FUN  |
            // |        |       |       |  GUI  |  LOW  |  SPC  |  ENT  |  RAI  |  SFT  |       |       |       |
                    label = "Num";
                    bindings = <
        &trans  &none  &none  &none   &none   &none   &kp KP_MINUS     &kp KP_PLUS    &kp KP_NUMBER_9  &kp KP_NUMBER_8  &kp KP_NUMBER_7  &trans
        &trans  &none  &none  &none   &none   &none   &kp KP_MULTIPLY  &kp KP_DIVIDE  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &trans
        &trans  &none  &none  &none   &none   &none   &none            &kp PERCENT    &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &trans
        &trans  &none  &none  &trans  &trans  &trans  &trans           &trans         &trans           &kp KP_NUMBER_0  &kp DOT          &none
                    >;
                };

    };
};
